text_extensions: [ 'atom', 'conf', 'css', 'erb', 'haml', 'htm', 'html', 'js', 'markdown', 'md', 'rb', 'sass', 'scss', 'svg', 'tex', 'ttl', 'txt', 'xml' ]

# Config for Nanoc commands

checks: &checks
  internal_links:
    exclude: [ '^/blog/feed' ]

  external_links:
    exclude: [ 'example.org' ]

deploy:
  public:
    kind: rsync
    dst: "lifepreserver@pentandra.com:/srv/http/lifepreserver"
    options: [ '-gplPrtvz', '--delete-after', '--exclude=/logs', '--rsync-path=sudo rsync' ]
  staging:
    kind: rsync
    dst: "vlad@rebikov.process.tree:/srv/http/lifepreserver"
    options: [ '-gplPrtvz', '--delete-after' ]

prune:
  auto_prune: true
  exclude: [ 'logs', 'uwsgi_temp', 'scgi_temp', 'proxy_temp', 'fastcgi_temp', 'client_body_temp' ]

view:
  static_root: &static_root /static

# Config for Nanoc data sources

data_sources:
  - type: filesystem
    content_dir: items

  - type: dependencies
    items_root: &meta_items_root /lifepreserver

  - type : dictionaries
    items_root: *meta_items_root
    directories:
      - 'var/dictionaries'
    language_priority: [ 'en_US', 'en_GB', 'es_ES', 'fr_FR', 'nl_NL', 'de_DE', 'it_IT' ]

  - type: tags
    items_root: *meta_items_root
    author_tags: 'etc/tags.yaml'
    tag_metadata: 'var/additional_tag_data.yaml'

  - type: vocabularies
    items_root: *meta_items_root
    prefixes_used:
      standard:   [ cc, ctag, dc, foaf, owl, pav, prov, rdf, rdfs, schema, sioc, skos, xhv ]
      business:   [ essglobal, fea, rov, vcard ]
      open_graph: [ article, og, profile ]
      document:   [ bibo, deo, doco, fabio ]
      instances:  [ dbo, dbr, yago ]
      technical:  [ deps, doap, vann, voaf, void ]
      pentandra:  [ pentandra, pentandra-blog, pentandra-website ]
      extra:      [ cert, essglobal-activities, essglobal-legalform, essglobal-qualifiers, essglobal-typeoflabour, sioct, xsd ]

  - type: company
    company_metafile: 'var/company.yaml'

  - type: people
    people_data: 'etc/people.yaml'


# Config for Nanoc environments

environments:
  default: &default
    base_url: &base_url "https://pentandra.com"
    static_root: *static_root

    blog: &blog
      title: The Pentandra Blog
      author_name: Pentandra
      author_uri: *base_url
      path: /blog
      tags_path: /tags
      archives_path: /archives
      feed_path: /blog/feed

    cache:
      short_urls: 'var/short_urls.yaml'

    company:
      page_path: /company

    erb:
      trim_mode: '>'

    git:
      url: "https://github.com/pentandra/lifepreserver.git"
      browse_url: "https://github.com/pentandra/lifepreserver"
      tag_url: "https://github.com/pentandra/lifepreserver/releases/tag"
      version_history_url: "https://github.com/lifepreserver/commits/master"

    people:
      page_path: /people

    site: &site
      name: Pentandra
      motto: Breaking Research Barriers
      recent_thoughts_limit: 5
      generate_meta: true
      base_url: *base_url
      images_path: /images

  development: &development
    <<: *default

    enable_output_diff: true

    site: # Simplify dependencies for quicker compilation during development
      <<: *site
      recent_thoughts_limit: 0
      generate_meta: false

    context2pdf:
      debug: true
      trackers: [ 'graphics.locating' ]

    checks:
      <<: *checks
      internal_links:
        exclude: [ '^/blog/feed', '^/tags', '^/archives' ]

    server:
      name: 'localhost'
      pid_file: 'logs/nginx.pid'
      error_log: 'stderr info'
      port: 3125
      port_tls: 4125
      tls_certificate: 'etc/certs/server.crt'
      tls_certificate_key: 'etc/certs/server.key'
      tls_dhparam: 'etc/certs/dhparam.pem'

  static_only:
    <<: *development
    ignore_server_items: true

  production: &production
    <<: *default

    require_git_tag: true # All production releases must be at a tag

    output_dir: 'output_prod'

    google_analytics:
      code: UA-26002603-1
      site: pentandra.com

    production: true

    server:
      name: 'pentandra.com'
      pid_file: '/var/run/nginx.pid'
      error_log: 'logs/error.log'
      port: 80
      port_tls: 443
      platform: 'linux'
      tls_certificate: '/etc/letsencrypt/live/pentandra.com/fullchain.pem'
      tls_certificate_key: '/etc/letsencrypt/live/pentandra.com/privkey.pem'
      tls_trusted_certificate: '/etc/letsencrypt/live/pentandra.com/chain.pem'
      tls_dhparam: '/etc/letsencrypt/live/pentandra.com/dhparam.pem'

  staging:
    <<: *production

    require_git_tag: false
