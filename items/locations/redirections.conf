# Specific locations that involve HTTP redirections

###
# Redirect syndication feed URIs to actual atom feed locations
###

<% @items.select { |item| item.unwrap.attributes[:kind] == 'feed' }.each do |feed| %>
# Feed: [<%= feed[:title] %>]
location = <%= path_to(feed).sub(/\.(?:atom|rss)$/, '') %> {
  return 307 <%= path_to(feed) %>;
}

<% end %>

###
# Permanent URI changes (to be avoided)
###

<% @items.select { |item| item.unwrap.attributes.key?(:previous_path) }.each do |resource| %>
# Redirect [<%= resource.fetch(:previous_path) %> â†’ <%= path_to(resource) %>]
location ~ <%= resource.fetch(:previous_path) %>?$ {
  return 301 <%= path_to(resource) %>;
}

<% end %>

###
# 303 redirections from concepts to information resources
###

<% @items.select { |item| item.unwrap.attributes[:kind] == 'concept' }.each do |concept| %>
# Concept: [<%= concept[:title] %>]
# Description: [<%= concept[:description] %>]
location = <%= path_to(concept).sub(/\.yaml$/, '') %> {
  return 303 <%= path_to(@items[concept.fetch(:redirect_to_id)]) %>;
}

<% end %>

###
# Content negotiation for linked data
###

<% @items.find_all('/**/*.ttl').each do |linked_data| %>
location = <%= path_to(linked_data).sub(/\.ttl$/, '') %> {
  add_header Vary $vary_header;
  add_header Cache-Control $cache_control;
  return 303 $uri$ld_suffix;
}

<% end %>

# vi: ft=nginx
