// Avoid `console` errors in browsers that lack a console.
(function() {
    var method;
    var noop = function () {};
    var methods = [
        'assert', 'clear', 'count', 'debug', 'dir', 'dirxml', 'error',
        'exception', 'group', 'groupCollapsed', 'groupEnd', 'info', 'log',
        'markTimeline', 'profile', 'profileEnd', 'table', 'time', 'timeEnd',
        'timeline', 'timelineEnd', 'timeStamp', 'trace', 'warn'
    ];
    var length = methods.length;
    var console = (window.console = window.console || {});

    while (length--) {
        method = methods[length];

        // Only stub undefined methods.
        if (!console[method]) {
            console[method] = noop;
        }
    }
}());

// Place any jQuery/helper plugins in here.
<%= @items['/static/assets/components/jquery/dist/jquery.js'].compiled_content(snapshot: :raw) %>
<%= @items['/static/assets/components/txtinput/txtinput.js'].compiled_content(snapshot: :raw) %>
<%= @items['/static/assets/components/js-url/url.js'].compiled_content(snapshot: :raw) %>
<%= @items['/static/assets/components/letteringjs/jquery.lettering.js'].compiled_content(snapshot: :raw) %>
<%= @items['/static/assets/components/jquery-smooth-scroll/jquery.smooth-scroll.js'].compiled_content(snapshot: :raw) %>
<%= @items['/static/assets/components/jquery-hashchange/jquery.ba-hashchange.js'].compiled_content(snapshot: :raw) %>
<%= @items['/static/assets/components/accessifyhtml5/accessifyhtml5.jquery.js'].compiled_content(snapshot: :raw) %>
<%= @items['/static/assets/components/Emphasis/js/emphasis-src.js'].compiled_content(snapshot: :raw) %>
<%= @items['/static/assets/components/retina.js/dist/retina.js'].compiled_content(snapshot: :raw) %>

var Pentandra = (function($) {

  var kerning = (function() {
    
    var setupKerning = function() {
      $('#ourvalues h2').lettering();
      $('.motto h1').lettering('words').children('span').lettering();
      $('.teamintro h1').lettering();
    };

    return { init: setupKerning };

  }());

  var scrolling = (function() {
    var mobileWidth = 768, previousPosition = null;

    var setupScrollingFor = function(elem) {
      $(elem).smoothScroll({
        beforeScroll: function(opts) {
          previousPosition = $(window).scrollTop();
        },
        afterScroll: function(opts) {
          window.location.hash = unescapeSelector(opts.scrollTarget);
        }
      });
    };

    var isSmallMenuInUse = function() {
      return $(window).width() < mobileWidth;
    };

    var scrollWhenTheHashChanges = function() {
      $(window).hashchange(function() {
        var hash = window.location.hash;

        if (!hash) {

          // If there is a previous position, move there
          if ($.isNumeric(previousPosition)) {
            $.smoothScroll(previousPosition);
          }

          // If we're coming to the page for the first time and we are on a
          // mobile device, scroll down past the menu to the main content.
          else if (isSmallMenuInUse()) {

            // Scroll to the top of the main content
            $.smoothScroll({
              scrollTarget: 'main'
            });
          }

        } else {

          if (document.getElementById(hash.substring(1))) {
            $.smoothScroll({
              scrollTarget: escapeSelector(hash)
            });
          }

        }

        return false;

      });

    };

    var setupScrollingToTop = function() {
      $(".backtotop").click(function() {
        $.smoothScroll(0);

        return false;
      });
    };

    var escapeSelector = function(str) {
      return str.replace(/(:|\.)/g, '\\$1');
    };

    var unescapeSelector = function(str) {
      return str.replace(/\\/g, '');
    };

    return {

      init: function(elem) {
        setupScrollingFor(elem);
        setupScrollingToTop();
        scrollWhenTheHashChanges();

        this.trigger();
      },

      trigger: function() {
        $(window).hashchange();
      }

    };

  }());

  var social = (function() {

    var setupPermalinks = function() {
      $(".permalinks input").focus(function(e) {
        $(this)
          .select()
          .one('mouseup', function(e) { e.preventDefault(); });
      });
    };

    return {
      init: function() {
        setupPermalinks();
      }
    };

  }());

  var search = (function() {

    var unique = function(arrayName) {
      var newArray = new Array();
      label: for (var i = 0; i < arrayName.length; i++) {
        for (var j = 0; j < newArray.length; j++) {
          if (newArray[j] == arrayName[i])
          continue label;
        }

        newArray[newArray.length] = arrayName[i];
      }

      return newArray;
    }

    var search = function(query, callback) {
      if (!Pentandra.index) {
        throw new Error("Pentandra.index has not been loaded! Cannot search.");
      }

      var terms = $.trim(query).replace(/[\W\s_]+/m,' ').toLowerCase().split(/\s+/);
      var matching_ids = null;
      for (var i = 0; i < terms.length; i++) {
        var term = terms[i];
        var exactmatch = Pentandra.index.terms[term] || [];
        var approxmatch = Pentandra.index.approximate[term] || [];
        var ids = unique(exactmatch.concat(approxmatch));
        if (matching_ids) {
          matching_ids = $.grep(matching_ids, function(id) {
            return ids.indexOf(id) != -1;
          });
        } else {
          matching_ids = ids;
        }
      }
      callback($.map(matching_ids, function(id){ return Pentandra.index.items[id]; }))
    };

    return { search: search };

  }());

  return {
    init: function() {
      kerning.init();
      scrolling.init("main a");
      social.init();

      AccessifyHTML5();
    },
    search: search.search
  };

}(jQuery));

$(document).ready(Pentandra.init)
