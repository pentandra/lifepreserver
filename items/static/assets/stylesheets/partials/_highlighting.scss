//
// Kate syntax highlighting (used by pandoc)
// See https://docs.kde.org/stable5/en/applications/katepart/highlight.html

table.sourceCode, tr.sourceCode, td.lineNumbers, td.sourceCode {
  margin: 0;
  padding: 0;
  vertical-align: baseline;
  border: none;
}

table.sourceCode {
  width: 100%;
  height: 100%;
  margin-bottom: $base-line-height;

  pre {
    margin: 0;
  }
}

td.lineNumbers {
  text-align: right;
  padding-right: 4px;
  padding-left: 4px;
  border-right: 2px solid $pentandra-brown;
}

td.sourceCode {
  padding-left: 5px;
}

div.sourceCode {
  overflow-x: auto;
}

code {

  // Keyword token (built-in language keywords)
  & > span.kw {
    font-weight: bold;
  }

  // DataType token (built-in data types like int, void, u64)
  & > span.dt {
    color: $pentandra-cyan;
  }

  // DecVal token (decimal values), BaseN token (values with a base other than 10), Float token (floating point values)
  & > span.dv, & > span.bn, & > span.fl {
    color: $pentandra-yellow;
  }

  // Char token (single characters, such as 'x')
  & > span.ch {
    color: $pentandra-violet;
  }

  // String token (strings like "hello world")
  & > span.st {
    color: $pentandra-mango;
  }

  // Comment token (comments)
  & > span.co {
    color: #888888;
    font-style: italic;
  }

  // Other token (when nothing else fits)
  & > span.ot {
    color: $pentandra-lime;
  }

  // Alert token (special words like TODO, FIXME, XXXX)
  & > span.al {
    color: $pentandra-red;
    font-weight: bold;
  }

  // Function token (function calls and definitions)
  & > span.fu {
    color: $pentandra-violet;
  }

  // RegionMarker token (region markers like //BEGIN, //END in comments)
  & > span.re {
  }

  // Error token (error highlighting and wrong syntax)
  & > span.er {
  }

  // Constant token (built-in and user defined constants like PI)
  & > span.cn {
  }

  // SpecialChar token (chars with special meaning in strings such as escapes, substitutions, or regex operators)
  & > span.sc {
  }

  // VerbatimString token (verbatim or raw strings like 'raw \backlash' in Perl, CoffeeScript, and shells, as well as r'\raw' in Python)
  & > span.vs {
  }

  // SpecialString token (SQL, regexes, HERE docs, LaTeX math mode, ...)
  & > span.ss {
  }

  // Import token (import, include, require of modules)
  & > span.im {
  }

  // Documentation token (/** Documentation comments */ or """docstrings""")
  & > span.do {
  }

  // Annotation token (documentation commands like @param, @brief)
  & > span.an {
  }

  // CommentVar token (the variable names used in above commands, like "foobar" in @param foobar)
  & > span.cv {
  }

  // Variable token (if applicable: variable names (e.g. $someVar in PHP/Perl))
  & > span.va {
  }

  // ControlFlow token (control flow keywords like if, else, switch, break, return, yield, ...)
  & > span.cf {
  }

  // Operator token (operators like + - * / :: < >)
  & > span.op {
  }

  // BuiltIn token (built-in functions, classes, and objects)
  & > span.bu {
  }

  // Extension token (common extensions, such as Qt classes and functions/macros in C++ and Python)
  & > span.ex {
  }

  // Preprocessor token (preprocessor statements or macro definitions)
  & > span.pp {
  }

  // Attribute token (annotations such as @override and __declspec(...))
  & > span.at {
  }

  // Information token (notes and tips like @note in doxygen)
  & > span.in {
  }

  // Warning token (warnings like @warning in doxygen)
  & > span.wa {
  }
}
